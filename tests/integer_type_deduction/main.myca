proc foo(a: usize) {}

proc max'T (a: T, b: T) -> T
{
	// I need type classes in order to implement this function
}

proc id'T (v: T) -> T
{
	return v;
}

proc main() -> i32
{
	let a = 5; // i32
	let b = 3 + 8; // i32
	let c = 3 + 8 + 150; // i32
	let d = -1 + (-3 as i8); // i8

	let i: i8 = 23 + 1 + 2;

	let e = 2147483647; // i32
	let f = 2147483648; // u32
	let g = 2147483647 + 2147483648 + 1; // isize

	foo(3);
	foo(-3 + 5);
	foo(-3 + 3);
	// foo(-3); // Should fail
	// foo(-3 + 2); // Should fail

	let m = max(3, 220); // i32
	let n = max(3 as u8, 220); // u8
	let o = max(3, 220 as u8); // u8
	// let p = max'i8(3, 220); // Should fail
	let q = max'u8(3, 220); // u8
	let r: u8 = max(3, 220); // u8
	let s = max(max(1, 2), 220 as u8); // u8

	let t = 2 < 3; // bool
	let u = 2 < 3 + (4 as u8); // bool
	//let v = (2 as i32) < (3 as i8); // Should fail

	let w = id(2) + 3; // i32
	let x = id(2) + (3 as u8); // u8
	let z = (1 as i8) + (2 as i32); // i32

	return 0;
}

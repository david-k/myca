proc foo(a: usize) -> Unit
{
}

proc max'(T)(a: T, b: T) -> T
{
}

proc id'(T)(v: T) -> T
{
    return v;
}

proc main() -> i32
{
    let a: i32 = 5;
    let b: i32 = (3 + 8);
    let c: i32 = ((3 + 8) + 150);
    let d: i8 = ((-1) + ((-3) as i8));
    let i: i8 = ((23 + 1) + 2);
    let e: i32 = 2147483647;
    let f: u32 = 2147483648;
    let g: isize = ((2147483647 + 2147483648) + 1);
    foo(3);
    foo(((-3) + 5));
    foo(((-3) + 3));
    let m: i32 = max'(i32)(3, 220);
    let n: u8 = max'(u8)((3 as u8), 220);
    let o: u8 = max'(u8)(3, (220 as u8));
    let q: u8 = max'(u8)(3, 220);
    let r: u8 = max'(u8)(3, 220);
    let s: u8 = max'(u8)(max'(i32)(1, 2), (220 as u8));
    let t: bool = (2 < 3);
    let u: bool = (2 < (3 + (4 as u8)));
    let w: i32 = (id'(i32)(2) + 3);
    let x: u8 = (id'(u8)(2) + (3 as u8));
    let z: i32 = ((1 as i8) + (2 as i32));
    return 0;
}
